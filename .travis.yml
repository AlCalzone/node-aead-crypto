# adapted from https://github.com/headmelted/vscode/blob/a57e613e9e7d2fdb3917502cb98bbd1eaef8c058/.travis.yml

branches:
  only:
    - master
    - /^v\d+\.\d+\.\d+(\-[a-zA-Z0-9]+)?$/

language: node_js

env:
  global:
    - secure: Z/K+lFOa5m76cAxvo6FcdECXZ5xDYczbpB+KukPxyhnx8JDN3XKimRgthq7MZIWKLn5GKTyXTX84BlPpIA4odXdWhok6E31pzPR/Z2wOeZyV/WjAvAlicBxRb1agzs56PkjMC1H6yj79gh6LlMvw9zdPQChscSFCw1zh9acfUIqac7wkrjxQvleMELrqaZTxKT+eERT7+Nzh8NIEVpIUHFJwqs8L33i/xPvSQPY9Dnlpphd+hgz3ufSJ7lfG+iaSMZnhNBn67peNK9kDPGeLhEfUYXJMZSg3M+8the/G1fs6Tqy8TLYaXK7O95mNfkF71qQSc/t+Fl058A82CGn9aOGTBES8uHKZR1/AYd3e6jPDaPFL0bA2kc8VxRZi3W9TjnVitc+Fo5QUz+IwuDyVD2zq2boG6j7+3fkxq89w/oMEyYbsMYHzxPJGpFhEoC3ez6MsMU7Co5SxVLCuIHvi9Ut9Rdp0ZHC8aiDL5EpoZCisR1RO6AAsiVj4Nn0KoAT08Mzq1TLiOuI/clz+aREIXbh1G3dBTeY2VN46184V5xdjZBA9MU5+fGFJAyAZMYUjNePlWbrXYU+vlGvYGt1kHz781erLRFebwnPvI54HX31rVSF+rK56hzNjz3eZ6zqQSkArIldFa1uL1XGHAatcaCUBptgkjUPa1JmorFNdAL4=

# define OSes with all settings so the build matrix is shorter
include: &osx
  sudo: false
  os: osx
  addons:
    apt:
      sources: 
      - 'ubuntu-toolchain-r-test'
      packages:
      - gcc-4.9
      - g++-4.9  
  env:
  - LABEL=OSX
    ARCH=x64

include: &linux
  sudo: false
  os: linux
  addons:
    apt:
      sources: 
      - 'ubuntu-toolchain-r-test'
      packages:
      - gcc-4.9
      - g++-4.9  
  env:
  - LABEL=LINUX
    ARCH=x64
    EXPORT_CXX=g++-4.9
    EXPORT_CC=gcc-4.9

include: &arm
  sudo: required
  os: linux
  addons:
    apt:
      sources: 
      - 'ubuntu-toolchain-r-test'
      packages:
      - gcc-4.9
      - g++-4.9  
      - gcc-arm-linux-gnueabihf
      - g++-arm-linux-gnueabihf
  env:
  - LABEL=ARM
    ARCH=arm
    EXPORT_CXX=g++-4.9
    EXPORT_CC=gcc-4.9
    EXPORT_PRE_CXX=arm-linux-gnueabihf-g++
    EXPORT_PRE_CC=arm-linux-gnueabihf-gcc
    EXPORT_PRE_LINK=arm-linux-gnueabihf-g++
    EXPORT_PRE_AR=arm-linux-gnueabihf-ar

matrix:
  include:
  - <<: *osx
    node_js: 4
  - <<: *osx
    node_js: 6
  - <<: *osx
    node_js: 8
  
  - <<: *linux
    node_js: 4
  - <<: *linux
    node_js: 6
  - <<: *linux
    node_js: 8
  
  - <<: *arm
    node_js: 4
  - <<: *arm
    node_js: 6
  - <<: *arm
    node_js: 8
    
before_install:
# Export neccessary env vars so gyp finds the compilers
- if [[ -n "${EXPORT_CXX}" ]]; then export CXX="${EXPORT_CXX}"; fi
- if [[ -n "${EXPORT_CC}" ]]; then export CC="${EXPORT_CC}"; fi
# get commit message
- COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
# put local node_modules on PATH
- export PATH=./node_modules/.bin/:$PATH
# put global node-gyp on PATH
- npm install -g node-gyp

- PUBLISH_BINARY=false
# if we are building a tag then publish
- if [[ $TRAVIS_BRANCH == `git describe --tags --always HEAD` ]]; then PUBLISH_BINARY=true; fi;
## or if we put [publish binary] in the commit message
#- if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then PUBLISH_BINARY=true; fi;

install:
# install dependencies
- npm install --production

script:
# for cross-compilation x64=>ARM make the required compilers known
- if [[ -n "${EXPORT_PRE_CXX}" ]]; then export CXX="${EXPORT_PRE_CXX}"; fi
- if [[ -n "${EXPORT_PRE_CC}" ]]; then export CC="${EXPORT_PRE_CC}"; fi
- if [[ -n "${EXPORT_PRE_AR}" ]]; then export AR="${EXPORT_PRE_AR}"; fi
- if [[ -n "${EXPORT_PRE_LINK}" ]]; then export LINK="${EXPORT_PRE_LINK}"; fi
- |
  if [[ $PUBLISH_BINARY == true ]]; then
    echo "publishing binary"
    prebuild-ci --arch=${ARCH}
  fi

after_success:
- echo "all done!"