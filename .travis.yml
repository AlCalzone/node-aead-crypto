# adapted from https://github.com/headmelted/vscode/blob/a57e613e9e7d2fdb3917502cb98bbd1eaef8c058/.travis.yml

branches:
  only:
    - master
    - /^v\d+\.\d+\.\d+(\-[a-zA-Z0-9]+)?$/

language: node_js
node_js: 8

env:
  global:
    - secure: E/gfpUcCLKP885o7F0nPLwnrxCnCMQuN12hwpeMYeX/KWeIaNyI1i402JDiJIg6PZkQ6gbcMpCVKVr2Is8E0KEfhWzB39Q4KIq6xHXixbBX1BTds3WAG43zdr/b755RVi+LU3F2RgD7thOazuFjMXYU/oBKAulgGmKt4ZQaPqw1wktiIMxH5l+UoR4DbXP2ggiga20QIbbmmlfUDOS3k8+mVIIeYGi48ZIKsDxW1Jje5lekkv5xM38Ri/l1dvyhtshiaY55LpmYS9xXNWXruyGyXFLvxwjN89LFNcSi8SKbS+vInkU01IaVV/7aklkaaVubYUT95dSGNi49C3YK2mB3k22N4UfU7QBZfLxf850SAshX0cDCkDMaWlMBemcW/NuPtaGu4KnA0ywmZtxbZLhuSY7RpMhiV9rOkVC+KzCz//Xv8ftxneIVblW76+h0vqTgkY4Kz5jOhs9O3MwbjdHv3VVN9CEecTscmzhD7fMNyCF3HFp6jaEmhfAPCFfiSV+1MjjRJsuIMT+S7PsowJKrKqOAtcQ0k0jEwThVnbbA5GgAzjXE5l8gza1O40Lsb6icrj2m343waK4utwP+oknrqeRyWPbDEOilGJHkqoC4dzXN4zeA5vKTePECEM6UobSRXx3tRzYW6dH1hJgv3jhLs7sPN9E4IBoS2C3XsFuQ=

# define OSes with all settings so the build matrix is shorter
include: &osx
  sudo: false
  os: osx
  addons:
    apt:
      sources: 
      - 'ubuntu-toolchain-r-test'
      packages:
      - gcc-6
      - g++-6
      - gcc-6-multilib
      - g++-6-multilib
  env:
  - LABEL=OSX
    ARCH=x64

include: &linux
  sudo: false
  os: linux
  addons:
    apt:
      sources: 
      - 'ubuntu-toolchain-r-test'
      packages:
      - gcc-6
      - g++-6
      - gcc-6-multilib
      - g++-6-multilib
  env:
  - LABEL=LINUX
    ARCH=x64
    EXPORT_CXX=g++-6
    EXPORT_CC=gcc-6

include: &arm
  sudo: required
  os: linux
  addons:
    apt:
      sources: 
      - 'ubuntu-toolchain-r-test'
      packages:
      - gcc-6
      - g++-6
      - gcc-arm-linux-gnueabihf
      - g++-arm-linux-gnueabihf
  env:
  - LABEL=ARM
    ARCH=arm
    EXPORT_CXX=g++-6
    EXPORT_CC=gcc-6
    EXPORT_PRE_CXX=arm-linux-gnueabihf-g++
    EXPORT_PRE_CC=arm-linux-gnueabihf-gcc
    EXPORT_PRE_LINK=arm-linux-gnueabihf-g++
    EXPORT_PRE_AR=arm-linux-gnueabihf-ar

matrix:
  include:
    - <<: *linux
    - <<: *osx
    - <<: *arm

before_install:
# Export neccessary env vars so gyp finds the compilers
- if [[ -n "${EXPORT_CXX}" ]]; then export CXX="${EXPORT_CXX}"; fi
- if [[ -n "${EXPORT_CC}" ]]; then export CC="${EXPORT_CC}"; fi
# get commit message
- COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
# put local node_modules on PATH
- export PATH=./node_modules/.bin/:$PATH
# put global node-gyp on PATH
- npm install -g node-gyp

- PUBLISH_BINARY=false
# if we are building a tag then publish
- if [[ $TRAVIS_BRANCH == `git describe --tags --always HEAD` ]]; then PUBLISH_BINARY=true; fi;
# or if we put [publish binary] in the commit message
- if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then PUBLISH_BINARY=true; fi;

install:
# install dependencies
- npm install

script:
# for cross-compilation x64=>ARM make the required compilers known
- if [[ -n "${EXPORT_PRE_CXX}" ]]; then export CXX="${EXPORT_PRE_CXX}"; fi
- if [[ -n "${EXPORT_PRE_CC}" ]]; then export CC="${EXPORT_PRE_CC}"; fi
- if [[ -n "${EXPORT_PRE_AR}" ]]; then export AR="${EXPORT_PRE_AR}"; fi
- if [[ -n "${EXPORT_PRE_LINK}" ]]; then export LINK="${EXPORT_PRE_LINK}"; fi
- |
  if [[ $PUBLISH_BINARY == true ]]; then
    echo "publishing binary"
    node ci/prebuild.js
  fi

after_success:
- echo "all done!"
